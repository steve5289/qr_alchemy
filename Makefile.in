NAME=qralchemy
VERSION=%%VERSION%%
RELEASE=%%RELEASE%%

SRC=src

BUILD=build
BUILD_APP=${BUILD}/app
BUILD_PIXMAP=${BUILD}/pixmaps
BUILD_BIN=${BUILD}/bin
BUILD_LIB=${BUILD}/lib
BUILD_CONF=${BUILD}/etc
BUILD_SHARE=${BUILD}/share
BUILD_STANDALONE=${BUILD}/standalone

LOCALTMP=tmp

BINDIR=%%BINDIR%%
CONFDIR=%%CONFDIR%%
PYTHON_LIBDIR=%%PYTHON_LIBDIR%%
SHAREDIR=%%SHAREDIR%%
APPDIR=%%APPDIR%%
USER_APPDIR=%%USER_APPDIR%%
PIXMAPDIR=%%PIXMAPDIR%%
STANDALONEDIR=%%STANDALONEDIR%%
POSTPROCESS_DIR=%%HOME%%/.config/megapixels/
POSTPROCESS=${POSTPROCESS_DIR}/postprocess.sh

STANDALONE_LAUNCHER=${BUILD_STANDALONE}/${NAME}.sh
STANDALONE_DESKTOP=${BUILD_STANDALONE}/${NAME}.desktop
STANDALONE_POSTPROCESS=${BUILD_STANDALONE}/postprocess.sh

ARCHIVE_DIR=${NAME}-${VERSION}
ARCHIVE_FILE=${NAME}.tar.gz
DEBBALL_FILE=${NAME}_${VERSION}.orig.tar.gz

SPEC_FILE=${NAME}.spec

build: clean build_prep standalone_build standard_build
	chmod 755 "${BUILD_BIN}"/*
	chmod 644 "${BUILD_CONF}"/*
	chmod 644 "${BUILD_APP}"/*
	chmod -R 755 "${BUILD_SHARE}"/*
	chmod 755 "${STANDALONE_LAUNCHER}"
	chmod 644 "${STANDALONE_DESKTOP}"
	chmod 755 "${STANDALONE_POSTPROCESS}"
	chmod 755 "${BUILD_LIB}/${NAME}"/*

	python3 -m compileall "${BUILD_LIB}/${NAME}"/
	@echo 'build complete. Run `sudo make install` to install in system space or `make standalone_install` to install in your homedir'


build_prep: clean
	cp -pr "${SRC}"/ "${BUILD}/"

build_spec:
	cp "${SPEC_FILE}.in" "${SPEC_FILE}"
	sed -i 's|%NAME%|${NAME}|g' "${SPEC_FILE}"
	sed -i 's|%VERSION%|${VERSION}|g' "${SPEC_FILE}"
	sed -i 's|%RELEASE%|${RELEASE}|g' "${SPEC_FILE}"
	sed -i 's|%BINDIR%|${BINDIR}|g' "${SPEC_FILE}"
	sed -i 's|%CONFDIR%|${CONFDIR}|g' "${SPEC_FILE}"
	sed -i 's|%PYTHON_LIBDIR%|${PYTHON_LIBDIR}|g' "${SPEC_FILE}"
	sed -i 's|%SHAREDIR%|${SHAREDIR}|g' "${SPEC_FILE}"
	sed -i 's|%APPDIR%|${APPDIR}|g' "${SPEC_FILE}"
	sed -i 's|%PIXMAPDIR%|${PIXMAPDIR}|g' "${SPEC_FILE}"

standard_build:
	sed -i 's|%CONFDIR%|${CONFDIR}|g' "${BUILD_BIN}/${NAME}"
	sed -i 's|%VERSION%|${VERSION}|g' "${BUILD_BIN}/${NAME}"
	sed -i 's|%SHAREDIR%|${SHAREDIR}|g' "${BUILD_BIN}/${NAME}"

	sed -i 's|%BINDIR%|${BINDIR}|g' "${BUILD_APP}/${NAME}.desktop"
	sed -i 's|%BINDIR%|${BINDIR}|g' "${BUILD_SHARE}/postprocess.sh"

standalone_build:
	sed -i 's|%STANDALONE%|${STANDALONEDIR}|g' "${STANDALONE_LAUNCHER}"
	sed -i 's|%BUILD_SHARE%|${BUILD_SHARE}|g' "${STANDALONE_LAUNCHER}"
	sed -i 's|%BUILD_STANDALONE%|${BUILD_STANDALONE}|g' "${STANDALONE_LAUNCHER}"
	sed -i 's|%BUILD_LIB%|${BUILD_LIB}|g' "${STANDALONE_LAUNCHER}"
	sed -i 's|%BUILD_BIN%|${BUILD_BIN}|g' "${STANDALONE_LAUNCHER}"
	sed -i 's|%BUILD_CONF%|${BUILD_CONF}|g' "${STANDALONE_LAUNCHER}"
	sed -i 's|%BUILD_APP%|${BUILD_APP}|g' "${STANDALONE_LAUNCHER}"

	sed -i 's|%STANDALONEDIR%|${STANDALONEDIR}|g' "${STANDALONE_DESKTOP}"
	sed -i 's|%BUILD_STANDALONE%|${BUILD_STANDALONE}|g' "${STANDALONE_DESKTOP}"
	sed -i 's|%BUILD_LIB%|${BUILD_LIB}|g' "${STANDALONE_DESKTOP}"
	sed -i 's|%BUILD_BIN%|${BUILD_BIN}|g' "${STANDALONE_DESKTOP}"
	sed -i 's|%BUILD_CONF%|${BUILD_CONF}|g' "${STANDALONE_DESKTOP}"
	sed -i 's|%BUILD_PIXMAP%|${BUILD_PIXMAP}|g' "${STANDALONE_DESKTOP}"

	sed -i 's|%STANDALONE%|${STANDALONEDIR}|g' "${STANDALONE_POSTPROCESS}"
	sed -i 's|%BUILD_STANDALONE%|${BUILD_STANDALONE}|g' "${STANDALONE_POSTPROCESS}"
clean:
	rm -rf '${BUILD}'
	rm -rf '${LOCALTMP}'
	rm -f '${ARCHIVE_FILE}'
	rm -f '${DEBBALL_FILE}'

run:
	"${STANDALONE_LAUNCHER}"

dist: clean
	mkdir -p "${LOCALTMP}/${ARCHIVE_DIR}"
	rsync -Carv --exclude "${LOCALTMP}" --delete ./ "${LOCALTMP}/${ARCHIVE_DIR}"
	tar -C "${LOCALTMP}" -czvf "${ARCHIVE_FILE}" "${ARCHIVE_DIR}"

deb: dist
	cp "${ARCHIVE_FILE}" "..//${DEBBALL_FILE}"
	debuild -us -uc

rpm: build_spec dist
	rpmbuild -ta "${ARCHIVE_FILE}"

standalone_install:
	cp -p "${STANDALONE_DESKTOP}" "${USER_APPDIR}"/
	update-desktop-database || :

install:
	mkdir -p '${DESTDIR}/${BINDIR}'
	mkdir -p '${DESTDIR}/${PYTHON_LIBDIR}'
	mkdir -p '${DESTDIR}/${APPDIR}'
	mkdir -p '${DESTDIR}/${PIXMAPDIR}'
	mkdir -p '${DESTDIR}/${SHAREDIR}'
	mkdir -p '${DESTDIR}/${CONFDIR}'

	cp -pr '${BUILD_BIN}'/* '${DESTDIR}${BINDIR}/'
	cp -pr '${BUILD_LIB}'/* '${DESTDIR}${PYTHON_LIBDIR}/'
	cp -pr '${BUILD_APP}'/* '${DESTDIR}${APPDIR}/'
	cp -pr '${BUILD_PIXMAP}'/* '${DESTDIR}${PIXMAPDIR}/'
	cp -pr '${BUILD_SHARE}'/* '${DESTDIR}${SHAREDIR}/'
	cp -pr '${BUILD_CONF}'/* '${DESTDIR}${CONFDIR}/'
	update-desktop-database || :

uninstall:
	mkdir -p '${DESTDIR}/${BINDIR}'
	mkdir -p '${DESTDIR}/${PYTHON_LIBDIR}'
	mkdir -p '${DESTDIR}/${APPDIR}'
	mkdir -p '${DESTDIR}/${PIXMAPDIR}'
	mkdir -p '${DESTDIR}/${SHAREDIR}'
	mkdir -p '${DESTDIR}/${CONFDIR}'

	rm -f '${DESTDIR}${BINDIR}/${NAME}'
	rm -rf '${DESTDIR}${PYTHON_LIBDIR}/${NAME}'
	rm -f '${DESTDIR}${APPDIR}/${NAME}.desktop'
	rm -f '${DESTDIR}${PIXMAPDIR}/${NAME}.png'
	rm -rf '${DESTDIR}${SHAREDIR}/${NAME}'
	rm -f '${DESTDIR}${CONFDIR}/${NAME}.conf'
	update-desktop-database || :

standalone_postprocess:
	mkdir -p '${POSTPROCESS_DIR}'
	cp -p '${BUILD_STANDALONE}/postprocess.sh' '${POSTPROCESS}'
	chmod 755 ${POSTPROCESS}

postprocess:
	mkdir -p '${DESTDIR}${POSTPROCESS_DIR}'
	cp -p '${DESTDIR}${BUILD_SHARE}/postprocess.sh' '${POSTPROCESS}'
	chmod 755 '${DESTDIR}${POSTPROCESS}'

test:
	cd build/test && make basic
